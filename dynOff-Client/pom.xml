<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <!-- Basic Properties -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>${project.parent.groupId}</groupId>
  <artifactId>dynOff-Client</artifactId>
  <version>${project.parent.version}</version>
  <packaging>jar</packaging>
  <name>DynOff Client Application</name>

    <properties>
        <base>openjdk:8-jre-alpine</base>
        <bundle>${project.artifactId}-${project.version}.${project.packaging}</bundle>
        <image.name>unibaktr/dynoff-client:${project.version}</image.name>
    </properties>

    <parent>
        <groupId>de.uniba.wiai.ktr.mg</groupId>
        <artifactId>dynOff</artifactId>
        <version>1.0</version>
    </parent>


    <dependencies>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>dynOff-ActorsUtility</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.12</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit_2.12</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.ws</groupId>
            <artifactId>jaxws-api</artifactId>
            <version>2.2.8</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <version>2.1.4</version>
        </dependency>
    </dependencies>

  <build>
      <plugins>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
          </plugin>
          <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/log4j.properties</exclude>
					</excludes>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${client.main}</mainClass>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<mode>development</mode>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
          <plugin>
              <artifactId>maven-dependency-plugin</artifactId>
              <executions>
                  <execution>
                      <phase>process-sources</phase>

                      <goals>
                          <goal>copy-dependencies</goal>
                      </goals>

                      <configuration>
                          <outputDirectory>${project.build.directory}/lib</outputDirectory>
                      </configuration>
                  </execution>
              </executions>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-assembly-plugin</artifactId>
              <version>2.4.1</version>
              <configuration>
                  <!-- get all project dependencies -->
                  <descriptorRefs>
                      <descriptorRef>jar-with-dependencies</descriptorRef>
                  </descriptorRefs>
                  <!-- MainClass in mainfest make a executable jar -->
                  <archive>
                      <manifest>
                          <mainClass>${client.main}</mainClass>
                      </manifest>
                  </archive>

              </configuration>
              <executions>
                  <execution>
                      <id>make-assembly</id>
                      <!-- bind to the packaging phase -->
                      <phase>package</phase>
                      <goals>
                          <goal>single</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin>

          <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>jaxws-maven-plugin</artifactId>
              <version>2.4.1</version>
              <executions>
                  <execution>
                      <id>generate-reports-ws-code</id>
                      <phase>generate-sources</phase>
                      <goals>
                          <goal>wsimport</goal>
                      </goals>
                      <configuration>
                          <verbose>true</verbose>
                          <vmArgs>
                              <vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
                          </vmArgs>

                          <!-- This property is used to support having multiple <execution> elements. The plugin has, from some reason, only one timestamp file per the all executions, thus if you have two executions, it doesn't know exactly when to recompile the code. Here we tell it explicitly to have one timestamp file per each execution -->                            <staleFile>${project.build.directory}/jaxws/stale/.staleFlag.reports</staleFile>
                          <packageName>de.uniba.wiai.ktr.mg.dynoff.generated</packageName>
                          <bindingDirectory>${basedir}/src/jaxws</bindingDirectory>
                          <bindingFiles>
                              <bindingFile>DynOffWebservice.xsd</bindingFile>
                          </bindingFiles>
                          <wsdlDirectory>${basedir}/src/wsdl</wsdlDirectory>
                          <wsdlFiles>
                              <wsdlFile>DynOffWebservice.wsdl</wsdlFile>
                          </wsdlFiles>
                          <verbose>true</verbose>
                          <sourceDestDir>${basedir}/src/main/java/</sourceDestDir>
                      </configuration>
                  </execution>
              </executions>
          </plugin>

          <plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <configuration>
                  <images>
                      <image>
                          <name>${image.name}</name>
                          <alias>client</alias>
                          <build>
                              <filter>@</filter>
                              <dockerFileDir>${project.basedir}/src/main/docker/</dockerFileDir>
                              <assembly>
                                  <descriptorRef>artifact-with-dependencies</descriptorRef>
                              </assembly>
                          </build>
                          <run>
                              <cmd>141.13.92.6</cmd>
                          </run>
                      </image>
                  </images>
              </configuration>
          </plugin>
      </plugins>
  </build>

</project>
