
package de.uniba.wiai.ktr.dynoff_wsdlstub;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "WebServiceAccess", targetNamespace = "http://webservice/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServiceAccess {


    /**
     * 
     * @param props
     * @return
     *     returns java.lang.String
     * @throws ServerFault_Exception
     */
    @WebMethod
    @WebResult(name = "actorid", targetNamespace = "")
    @RequestWrapper(localName = "generateActorFromProps", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.GenerateActorFromProps")
    @ResponseWrapper(localName = "generateActorFromPropsResponse", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.GenerateActorFromPropsResponse")
    public String generateActorFromProps(
        @WebParam(name = "props", targetNamespace = "")
        byte[] props)
        throws ServerFault_Exception
    ;

    /**
     * 
     * @param jobmessage
     * @return
     *     returns byte[]
     * @throws ServerFault_Exception
     */
    @WebMethod
    @WebResult(name = "resultmessage", targetNamespace = "")
    @RequestWrapper(localName = "sendMessage", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.SendMessage")
    @ResponseWrapper(localName = "sendMessageResponse", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.SendMessageResponse")
    public byte[] sendMessage(
        @WebParam(name = "jobmessage", targetNamespace = "")
        JobMessage jobmessage)
        throws ServerFault_Exception
    ;

    /**
     * 
     * @param jobmessageasync
     * @return
     *     returns java.lang.String
     * @throws ServerFault_Exception
     */
    @WebMethod
    @WebResult(name = "jobid", targetNamespace = "")
    @RequestWrapper(localName = "dispatchAsyncJob", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.DispatchAsyncJob")
    @ResponseWrapper(localName = "dispatchAsyncJobResponse", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.DispatchAsyncJobResponse")
    public String dispatchAsyncJob(
        @WebParam(name = "jobmessageasync", targetNamespace = "")
        JobMessageAsync jobmessageasync)
        throws ServerFault_Exception
    ;

    /**
     * 
     * @param propsid
     * @return
     *     returns java.lang.String
     * @throws ServerFault_Exception
     */
    @WebMethod
    @WebResult(name = "actorid", targetNamespace = "")
    @RequestWrapper(localName = "generatePreAvailableActor", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.GeneratePreAvailableActor")
    @ResponseWrapper(localName = "generatePreAvailableActorResponse", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.GeneratePreAvailableActorResponse")
    public String generatePreAvailableActor(
        @WebParam(name = "propsid", targetNamespace = "")
        String propsid)
        throws ServerFault_Exception
    ;

    /**
     * 
     * @param jobid
     * @return
     *     returns byte[]
     * @throws ServerFault_Exception
     */
    @WebMethod
    @WebResult(name = "resultmessage", targetNamespace = "")
    @RequestWrapper(localName = "getAsyncJobresult", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.GetAsyncJobresult")
    @ResponseWrapper(localName = "getAsyncJobresultResponse", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.GetAsyncJobresultResponse")
    public byte[] getAsyncJobresult(
        @WebParam(name = "jobid", targetNamespace = "")
        String jobid)
        throws ServerFault_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<de.uniba.wiai.ktr.dynoff_wsdlstub.PropsPreAvailableMessage>
     */
    @WebMethod
    @WebResult(name = "preavailable", targetNamespace = "")
    @RequestWrapper(localName = "getPreAvailableProps", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.GetPreAvailableProps")
    @ResponseWrapper(localName = "getPreAvailablePropsResponse", targetNamespace = "http://webservice/", className = "de.uniba.wiai.ktr.dynoff_wsdlstub.GetPreAvailablePropsResponse")
    public List<PropsPreAvailableMessage> getPreAvailableProps();

}
